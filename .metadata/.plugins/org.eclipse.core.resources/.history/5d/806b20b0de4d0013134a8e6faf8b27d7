package com.example.droidahoy;

import android.content.Context;

public class BluetoothTexting extends Activity {

	private BluetoothAdapter bluetooth;
	private BluetoothSocket socket;
	private UUID uuid = UUID.fromString("9bab7407-243a-30d0-b082-4696e73f01aa");

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.main);
		// Get the Bluetooth Adapter
		configureBluetooth();
		// Setup the ListView of discovered devices
		setupListView();
		// Setup search button
		setupSearchButton();
		// Setup listen button
		setupListenButton();
	}

	private void configureBluetooth() {
		bluetooth = BluetoothAdapter.getDefaultAdapter();
	}
	private void setupListenButton() {}
	private void setupListView() {}
	private void setupSearchButton(){}

	/*
	   private void switchUI() {

		 final TextView messageText = (TextView)findViewById(R.id.text_messages);
		 final EditText textEntry = (EditText)findViewById(R.id.text_message);
		 messageText.setVisibility(View.VISIBLE);
		 list.setVisibility(View.GONE);
		 textEntry.setEnabled(true);
		 }
	 */

	private static int DISCOVERY_REQUEST = 1;
	private void setupListenButton() {
		Button listenButton = (Button)findViewById(R.id.button_listen);
		listenButton.setOnClickListener(new OnClickListener() {
			public void onClick(View view) {
				intent disc;
				disc = new Intent(BluetoothAdapter.ACTION_REQUEST_DISCOVERABLE);
				startActivityForResult(disc, DISCOVERY_REQUEST);
			}
		});
	}
	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent
			data) {
		if (requestCode == DISCOVERY_REQUEST) {
			boolean isDiscoverable = resultCode > 0;
			if (isDiscoverable) {
				String name = "bluetoothserver";
				try {
					final BluetoothServerSocket btserver =
							bluetooth.listenUsingRfcommWithServiceRecord(name, uuid);
					AsyncTask<Integer, Void, BluetoothSocket> acceptThread =
							new AsyncTask<Integer, Void, BluetoothSocket>() {
						@Override
						protected BluetoothSocket doInBackground(Integer . . .params) {

							try {
								socket = btserver.accept(params[0]*1000);
								return socket;
							} catch (IOException e) {
								Log.d("BLUETOOTH", e.getMessage());
							}

							return null;
						}
						@Override
						protected void onPostExecute(BluetoothSocket result) {
							if (result != null)
								switchUI();
						}
					};
					acceptThread.execute(resultCode);
				} catch (IOException e) {
					Log.d("BLUETOOTH", e.getMessage());
				}
			}
		}
	}

